//////////////////////////  Import all  ////////////////////////////////////
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.actions.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.actions.impl.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.activity.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.activity.impl.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.activity.lifecycle.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.aliases.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.aliases.impl.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.artifact.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.artifact.impl.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.candidates.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.candidates.impl.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.cmd.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.cmd.impl.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.env.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.features.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.request.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.request.impl.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.request.lifecycle.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.rest.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.userinfo.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.userinfo.impl.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.utils.*;
///////////////////////////////////////////////////////////////////////////////

// ----------------------------------- Output parameters ---------------------------------------

rule "Maven execution status succeeded"
	when
		active activity 'MvnBuildActivity'
		$execstat : ExecStatus(succeeded==true) for activity
		$target : MavenTargetDir for activity
	then
		activity succeeded
		add activity status parameter '$target';
end

// #############################################################################################
rule "Maven_DefaultTargets"
	when
		active activity 'MvnBuildActivity'
	then
		add ordinal 500 "clean"
		add ordinal 501 "package"
end

rule "Maven project dir"
	when
		active activity 'MvnBuildActivity'
		$pom : BuildFile for activity
		not MavenProjectDir for activity
	then
		insert artifact '$pom._getFile().getParent(), ""' as 'MavenProjectDir'
end

rule "Maven target dir"
	when
		active activity 'MvnBuildActivity'
		$pd : MavenProjectDir for activity
		not MavenTargetDir for activity
	then
		insert artifact '$pd.getAbsolutePath(), "target"' as 'MavenTargetDir'
end

rule "Maven_DfltOption_PomFile"
	when
		active activity 'MvnBuildActivity'
		$pom : BuildFile for activity
		// not MvnRootPom
	then
		add ordinal 50 "-f"
		add ordinal 51 $pom.getAbsolutePath()
end

rule "Maven option: sources encoding"
	when
		active activity 'MvnBuildActivity'
		$enc : SrcEncoding for activity
	then
		add ordinal 60 "-Dproject.build.sourceEncoding=" + $enc.getEncoding()
end

rule "Maven option: repo location"
	when
		active activity 'MvnBuildActivity'
		$repo : MavenRepoLocation for activity
	then
		add ordinal 70 "-Dmaven.repo.local=" + $repo.getAbsolutePath()
end

rule "Select source encoding"
	when
		active activity 'MvnBuildActivity'
		$upe : RSK_UseEncoding for activity
		not RSK_JavacIncompatibleEncodings(encoding == $upe.encoding) for activity
		not SrcEncoding for activity
	then
		insert '$upe.getEncoding()' as new 'SrcEncoding';
end

rule "Select maven version"
	when
		active activity 'MvnBuildActivity'
		not MavenFeatureInUse for activity
		$mvn : any 'MavenFeature'
		not IncompatibleFact(fact==$mvn) for activity
	then
>		insert( new MavenFeatureInUse().reset($activity, $mvn) );
end

rule "Request for maven"
	when
		active activity 'MvnBuildActivity'
>		not MavenFeature()
	then
		add feature action 'maven';
end

rule "Detect maven version deadlock"
	when
		active activity 'MvnBuildActivity'
		exists any 'MavenFeature'
>		forall ($mvn : MavenFeature()
>				IncompatibleFact(activity==$activity, fact==$mvn) )
	then
		activity failed with message "Can't select maven version: all available versions are incompatible"
end

rule "Maven_BuildCommand"
	salience -1 // shall be less than for mvn targets insertion rule
	when
	    active activity 'MvnBuildActivity'
	    cmd options for activity
		$pd : MavenProjectDir for activity
		$mvn : any 'MavenFeature'
		MavenFeatureInUse(fact==$mvn) for activity
	then
		execute command $mvn.getCmdName() in working dir $pd
end

rule "Maven execution status failed"
	when
		active activity 'MvnBuildActivity'
		$execstat : ExecStatus(succeeded==false) for activity
	then
		insert artifact '$execstat.getFileOut()' as 'GenericUserInfoFileArtifact'
		activity failed with message "Maven failed with status " + $execstat.getStatus()
end