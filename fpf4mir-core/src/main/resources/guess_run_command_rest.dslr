//////////////////////////  Import all  ////////////////////////////////////
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.actions.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.actions.impl.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.activity.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.activity.impl.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.activity.lifecycle.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.aliases.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.aliases.impl.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.artifact.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.artifact.impl.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.candidates.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.candidates.impl.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.cmd.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.cmd.impl.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.env.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.features.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.request.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.request.impl.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.request.lifecycle.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.rest.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.userinfo.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.userinfo.impl.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.utils.*;
///////////////////////////////////////////////////////////////////////////////

declare ResultsOutputDir extends ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.artifact.impl.FolderArtifactBase end

declare FNParamFilter extends ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.activity.impl.ActivityRelatedFactBase
	activity : Activity
	flist : FileArtifactList
end

rule "REST: output files list"
	when
		active activity 'RunActivity'
		RunFormat_Rest for activity
		$execstat : ExecStatus(succeeded==true) for activity
		ResultsOutputDir($output : getFileArtifactListForPattern("**\\*.pdf")) for activity
	then
		insert '$output' as 'Result_FileArtifactList';
end

rule "REST: output dir"
	when
		active activity 'RunActivity'
		RunFormat_Rest for activity
		$dataset : Dataset for activity
		not ResultsOutputDir for activity
	then
		insert '$dataset' as 'ResultsOutputDir';
end

rule "REST: default ExecWorkingDirCandidate from dataset"
	when
		active activity 'RunActivity'
		RunFormat_Rest for activity
		$dataset : Dataset for activity
	then
		insert '$dataset.getAbsolutePath(), ""' as candidate 'ExecWorkingDir';
end

rule "REST: guess FNParamFilter from rest arguments"
	when
		active activity 'RunActivity'
		RunFormat_Rest for activity
		GenericOrdinalArgument(order >= 1000, order < 10000, $value : value) for activity
		$dataset : Dataset for activity
	then
		insert '$dataset.getFileArtifactListForPattern("**\\" + $value)' as new 'FNParamFilter';
end

rule "REST: executable working dir (try FNParamFilter)"
	when
		active activity 'RunActivity'
		RunFormat_Rest for activity
		FNParamFilter($flist : flist, $flist.size() == 1) for activity
	then
		insert '$flist.get(0)._getFile().getParent(), ""' as candidate 'ExecWorkingDir';
end

rule "REST: cmdline options ready"
		salience -1 // after all options are inserted 
	when
		active activity 'RunActivity'
		RunFormat_Rest for activity
	then
		insert Run_AppOptionsReady
end
