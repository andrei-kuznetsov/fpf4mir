import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.generic.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.requestfacts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.actionfacts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.run.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.env.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.deploy.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.cmd.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.utils.*;

declare PreparedUnzipInfo
    req : ReqExtract
    file : FileArtifact
    activity : Activity
end

rule "Prepare unzip info"
	when 
		$r : ReqExtract( $a : file, $a.fileName.endsWith(".zip") )
	    $ea : Activity( request == $r )
		not ExecStatus( activity == $ea )
	then 
		insertLogical(new PreparedUnzipInfo($r, $a, $ea));
end

rule "Prepare output dir"
	when 
	    PreparedUnzipInfo($a : file, $ea : activity, $r : req)
	    $tmp : TmpDirRoot( )
	then
		insert( $tmp.newTempFolder( $ea ) );
end

rule "Unzip with jar"
	when 
	    PreparedUnzipInfo($a : file, $ea : activity, $r : req)
	then
		insertLogical( new OrdinalArgument( $ea, 1, "xf") );
		insertLogical( new OrdinalArgument( $ea, 2, $a.getAbsolutePath() ) );
end

rule "Unzip with jar command"
	when 
	    PreparedUnzipInfo($a : file, $ea : activity, $r : req)
	    $target : FolderArtifact( activity == $ea )
		
		$options : java.util.LinkedList() from collect ( OrdinalArgument( activity == $ea ) )
	then
		insertLogical( new ListExecCommand($ea, "jar", $target, $options) );	
end

rule "Evaluate activity result"
	when 
	    $ea : Activity( id == R.id.ExtractActivity )
		ExecStatus( activity == $ea, succeeded == true )
	then 
		insertLogical(new GenericActivitySucceeded($ea));
end

rule "Publish request result"
	when 
	    $ea : Activity( id == R.id.ExtractActivity, $req : request )
	    $target : FolderArtifact( activity == $ea )
	    ActivitySucceeded( activity == $ea )
	then 
		insertLogical(new GenericFolderArtifactAlias($target, $req) );
end

rule "Publish request status"
    when 
        $req : ReqExtract()
        FolderArtifactAlias( request == $req )
    then
		insertLogical(new RequestStatus($req, "ok", true));
end