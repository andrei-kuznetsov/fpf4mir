import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.requestfacts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.build.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.build.maven.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.actionfacts.*;

rule "CommandExecutor"
	when
		$cmd : ExecCommand( )
		not ExecStatus( execCommand == $cmd )
	then
		insertLogical( new ExecAction($cmd) );
end
/* 
rule "Activity_New"
	when
		$rr : ReqNewActivity(  )
		forall ( $b : Activity( request == $rr )
	             ExecStatus( activity == $b, succeeded == false ) 
 		         ActivityErrorFixed( activity == $b ) )
	then
		insert( $rr.newActivityInstance() );
end
/* */
/* */
rule "Activity_New"
	when
		$rr : ReqNewActivity(  )
		forall ( $b : Activity( request == $rr )
	             ActivityError( activity == $b ) 
 		         ActivityErrorFixed( activity == $b ) )
	then
		String pkg = $rr.getClass().getPackage().toString();
		String type = $rr.getClass().getSimpleName();
		type = type.replaceAll("ReqNew","").replaceAll("Req", "") + "Activity";
		
		// TODO: package name?
		pkg = "defaultpkg";
		System.out.println("## pkg: " + pkg);
		System.out.println("## type: " + type);
		
		org.drools.definition.type.FactType factType = drools.getKnowledgeRuntime().getKnowledgeBase().getFactType(pkg, type);
		Object fact = factType.newInstance();
		factType.set(fact, "request", $rr);
		insert( fact );
end
/* */