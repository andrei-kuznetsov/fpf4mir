expander dsl.dsl

import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.requestfacts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.actionfacts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.generic.*;

// #################################### Input parameters #######################################
// automatic
// ----------------------------------- Output parameters ---------------------------------------

rule "DeployArtifact Request Status"
	when
		request 'ReqDeployFolder'
		activity for request
		activity succeeded
		'FolderArtifact' for activity
	then
		set request status succeeded
		add request status parameter $artifact as DeployFolder
end

// #############################################################################################

rule "DownloadArtifact"
	when 
		active activity 'DeployFolderActivity'
>		$ref : ArtifactRef(activity == $activity)
>		not Artifact(activity == $activity)
	then
		add subrequest 'ReqDownloadHttp'
		add subrequest parameter '$ref' as 'GenericArtifactRefAlias'
end


rule "Assert Downloaded Artifact"
	when 
	    active activity 'DeployFolderActivity'
		subrequest 'ReqDownloadHttp'
		subrequest succeeded
		subrequest outputs (
			subrequest output 'FileArtifactAlias'
>		)
	then
		add activity fact from request output
end


rule "Assert Download Failed Artifact"
	when 
	    active activity 'DeployFolderActivity'
		subrequest 'ReqDownloadHttp'
		subrequest failed
	then
		activity failed with status "Can't download artifact"
end

rule "ExtractArtifact"
	when 
		active activity 'DeployFolderActivity'
>		$artifact : FileArtifact(activity == $activity, fileName.endsWith(".zip"))
>		not FolderArtifact(activity == $activity)
	then
		add subrequest 'ReqExtract'
		add subrequest parameter '$artifact' as 'GenericFileArtifactAlias'
end

rule "Process exctracted artifact"
	when 
	 	active activity 'DeployFolderActivity'
		subrequest 'ReqExtract'
		subrequest succeeded
		subrequest outputs (
			subrequest output 'FolderArtifactAlias'
>		)
	then
		add activity fact from request output
end

rule "Process exctracted artifact failed"
	when
		active activity 'DeployFolderActivity'
		subrequest 'ReqExtract'
		subrequest failed
	then
		activity failed with status "Can't extract artifact. Reason: " + $subrequestStatus.getMessage()
end

rule "Assert DeployFolder"
	when
		active activity 'DeployFolderActivity'
		'FolderArtifact' for activity
	then
		activity succeeded
end

