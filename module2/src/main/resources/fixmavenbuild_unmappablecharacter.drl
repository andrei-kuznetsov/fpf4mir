import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.sources.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.build.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.build.maven.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.actionfacts.*;


rule "Maven_Warn_NoFileEncoding"
	when
		$build : MvnBuild(  )
		ExecStatus( activity == $build, containsString("[WARNING] File encoding has not been set") )
	then
		insert( new MvnWarn_NoFileEncoding($build) );
end

rule "Javac_Err_UnmappableCharacter"
	when
		$build : MvnBuild()
		ExecStatus( activity == $build,
                    $errLine : getSingleLine("error: unmappable character for encoding"), 
                    $errLine != null )
	then
		insert( new JavacErr_UnmappableCharacter($build, $errLine) );
end

rule "Fix_JavacErr_UnmappableCharacter_1"
	when
		$e : JavacErr_UnmappableCharacter()
		//not DetectEncodingAction()  equal objects is OK as they are treated 
		//                            as the same object and not inserted twice
		not SrcEncoding()
	then
		insert( new DetectEncodingAction($e.getActivity()) );
end

rule "SrcEncoding added"
	when
		$e : JavacErr_UnmappableCharacter()
		not BuildSrcEncoding(activity == $e.activity)
		exists SrcEncoding(  )
	then
		insert(new BuildErrorFixed($e));
end

rule "SrcEncoding changed"
	when
		$e : JavacErr_UnmappableCharacter()
	   	$be : BuildSrcEncoding(activity == $e.activity)
	   	not SrcEncoding(this == $be.srcEncoding)
	then
		insert(new BuildErrorFixed($e));
end

rule "Set build src encoding" when
		$se : SrcEncoding()
		$build : BuildActivity(  )
		not ExecStatus( activity == $build )
	then
		insert ( new BuildSrcEncoding( $build, $se ) );
end

rule "Maven_Option_SrcEncoding" when
		$build : MvnBuild()
		$be : BuildSrcEncoding( activity == $build )
	then
		insertLogical( new MvnOption_SrcEncoding($build, $be) );
end
