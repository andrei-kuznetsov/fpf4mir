import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.generic.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.deploy.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.requestfacts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.build.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.build.maven.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.actionfacts.*;

// #################################### Input parameters #######################################
rule "Populate input parameters for DeployExecutableActivity from ReqDeployFolder"
	when
		request 'ReqDeployExecutable'
		activity 'DeployExecutableActivity' for request
		request inputs (
		    input 'FileArtifactAlias'
		    input 'FolderArtifactAlias'
		    input 'ArtifactRefAlias'
>		)
	then
		add activity fact from request input
end

// ----------------------------------- Output parameters ---------------------------------------

rule "DeployExecutable Request Status"
	when
		request 'ReqDeployExecutable'
		activity 'DeployExecutableActivity' for request
		activity succeeded
>		$artifact : ExecutableFileArtifact(activity == $activity)
	then
		set request status succeeded
		add request status parameter $artifact as GenericExecutableFileArtifactAlias
end

// #############################################################################################

rule "Deploy executable from file artifact"
	when
		activity 'DeployExecutableActivity'
>		$file : FileArtifact( activity == $activity )
>		not FolderArtifact( activity == $activity )
	then
		add subrequest 'ReqDeployFolder'
		add subrequest parameter '$file' as 'GenericFileArtifactAlias'
end

/*
use deployed folder as is when FolderArtifactAlias( request == $r )
*/

rule "Deploy executable from URL"
	when
		activity 'DeployExecutableActivity'
>		$ref : ArtifactRef(activity == $activity)
>		not FolderArtifact( activity == $activity )
	then
		add subrequest 'ReqDeployFolder'
		add subrequest parameter '$ref' as 'GenericArtifactRefAlias'
end

rule "Assert DeployFolder Artifact"
	when 
	    activity 'DeployExecutableActivity'
		subrequest 'ReqDeployFolder'
		subrequest succeeded
		subrequest outputs (
			subrequest output 'DeployFolder'
>		)
	then
		add activity fact from request output
end

rule "Process DeployFolder Artifact request faled"
	when 
	    activity 'DeployExecutableActivity'
		subrequest 'ReqDeployFolder'
		subrequest failed
	then
		activity failed with status "Can't deploy artifact locally. Reason: " + $subrequestStatus.getMessage()
end

rule "Evaluate run executable"
	when
		activity 'DeployExecutableActivity'
>		$folder : FolderArtifact( activity == $activity )
>		not ExecutableFileArtifact(activity == $activity)
	then
		add subrequest 'ReqGuessRunExecutable'
		add subrequest parameter '$folder' as 'GenericFolderArtifactAlias'
end

rule "Process ReqGuessRunExecutable result"
	when 
	 	activity 'DeployFolderActivity'
		subrequest 'ReqGuessRunExecutable'
		subrequest succeeded
		subrequest outputs (
			subrequest output 'ExecutableFileArtifactAlias'
>		)
	then
		add activity fact from request output
end

rule "Process ReqGuessRunExecutable result failed"
	when 
	 	activity 'DeployFolderActivity'
		subrequest 'ReqGuessRunExecutable'
		subrequest failed
	then
		activity failed with status "Can't guess executable"
end

rule "Eval DeployExecutableActivity succeeded"
	when
		activity 'DeployExecutableActivity'
>		$artifact : ExecutableFileArtifact( activity == $activity )
	then
		activity succeeded
end
