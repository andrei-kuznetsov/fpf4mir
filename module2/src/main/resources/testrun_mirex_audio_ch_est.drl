import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.mir.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.env.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.build.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.build.maven.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.actionfacts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.requestfacts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.run.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.run.java.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.mirex.*;

rule "Mir_ScratchDir4Run"
	when
		$run : Run( $rr : request )
		$sdi : ScratchDirIn( request == $rr )
		$sdir : ScratchDir( datasetId == $sdi.datasetId )
	then
		insertLogical(new ScratchDir4Run($run, $sdir));
end

rule "Mir_Dataset4Run"
	when
		$run : Run( $rr : request )
		$rdi : RunDatasetIn( request == $rr )
		$dataset : Dataset( datasetId == $rdi.datasetId )
	then
		insertLogical(new Dataset4Run($run, $dataset));
end

rule "Mir_Dataset_FileArtifactList4Run"
	when
		$run : Run( $rr : request )
		$rdi : RunDatasetIn( request == $rr )
		$dataset : Dataset( datasetId == $rdi.datasetId )
		$datalist : Dataset_FileArtifactList( dataset == $dataset )
	then
		insertLogical(new Dataset_FileArtifactList4Run($run, $datalist));
end

rule "Mirex_AudioChordEstimation_RunOptions"
	when
		$run : Run( $rr : request )
		
		Dataset_FileArtifactList4Run( run == $run, $datalist : list )
		ScratchDir4Run( run == $run, $sdir : scratchDir)
		$res : ResultDir4Run( run == $run )
		
		CallFormat_MIREX_AudioChordEstimation()
	then
		insertLogical( new RunOrdinal($run, 1, $datalist.getAbsolutePath()) );
		insertLogical( new RunOrdinal($run, 2, $sdir.getAbsolutePath()) );
		insertLogical( new RunOrdinal($run, 3, $res.getAbsolutePath()) );	
end

rule "Mirex_AudioChordEstimation_Req_FileArtifactList"
	when 
		CallFormat_MIREX_AudioChordEstimation()
	then
		insertLogical(new ReqDataset2FileArtifactList());
		insertLogical(new ReqCreateNewRunResultDir());
end
