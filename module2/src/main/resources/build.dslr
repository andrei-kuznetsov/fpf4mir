import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.generic.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.build.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.build.maven.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.actionfacts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.requestfacts.*;


// #################################### Input parameters #######################################
// automatic
// ----------------------------------- Output parameters ---------------------------------------

rule "Build Request Status"
	when
		request 'ReqBuild'
		activity for request
		activity succeeded
		$artifact : ExecutableFileArtifact for activity
	then
		set request status succeeded
		add request status parameter $artifact as GenericFileArtifactAlias
end

// #############################################################################################


rule "NewBuild_Mvn"
	when
		activity 'BuildActivity'
>		BuildFile( activity == $activity, getFileName().endsWith("pom.xml") )
>		not MvnBuild( this == $activity )
	then
		cast activity '$activity' to 'MvnBuild'
end

rule "BuildStatus"
	when
		activity 'BuildActivity'
>		exists ExecStatus( activity == $activity, succeeded == true )
	then
		activity succeeded
end

rule "Guess run executable after build"
	when
		activity 'BuildActivity'
		activity succeeded
		$folder : FolderArtifact for activity
		not 'ExecutableFileArtifact' for activity
	then
		add subrequest 'ReqGuessRunExecutable'
		add subrequest parameter '$folder' as 'GenericFolderArtifactAlias'
end
