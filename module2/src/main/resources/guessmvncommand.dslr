expander dsl.dsl

import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.features.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.sources.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.build.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.build.maven.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.actionfacts.*;

// ----------------------------------- Output parameters ---------------------------------------

rule "Maven execution status succeeded"
	when
		active activity 'MvnBuildActivity'
		$execstat : ExecStatus(succeeded==true) for activity
		$target : MavenTargetDir for activity
	then
		activity succeeded
		add activity status parameter $target as GenericAlias
end

// #############################################################################################
rule "Maven_DefaultTargets"
	when
		active activity 'MvnBuildActivity'
		not MvnBuildTarget for activity
	then
		add ordinal 100 "clean"
		add ordinal 200 "package"
end

rule "Maven project dir"
	when
		active activity 'MvnBuildActivity'
		$pom : BuildFile for activity
		not MavenProjectDir for activity
	then
		insert artifact '$pom._getFile().getParent(), ""' as 'MavenProjectDir'
end

rule "Maven target dir"
	when
		active activity 'MvnBuildActivity'
		$pd : MavenProjectDir for activity
		not MavenTargetDir for activity
	then
		insert artifact '$pd.getAbsolutePath(), "target"' as 'MavenTargetDir'
end

rule "Maven_DfltOption_PomFile"
	when
		active activity 'MvnBuildActivity'
		$pom : BuildFile for activity
		// not MvnRootPom
	then
//		add keyvalue 50 "-f" $pom.getAbsolutePath();
		add ordinal 50 "-f"
		add ordinal 51 $pom.getAbsolutePath()
end

rule "Select maven version"
	when
		active activity 'MvnBuildActivity'
		not FeatureInUse(feature.name=="maven") for activity
>		$mvn : MavenFeature()
		not RSKIncompatibleFeatureVersion(feature==$mvn) for activity
	then
>		insert( new GenericFeatureInUse($activity, $mvn) );
end

rule "Request for maven"
	when
		active activity 'MvnBuildActivity'
>		not MavenFeature()
	then
		add feature action 'maven';
end

rule "Detect maven version deadlock"
	when
		active activity 'MvnBuildActivity'
>		exists MavenFeature()
>		forall ($mvn : MavenFeature()
>				RSKIncompatibleFeatureVersion(activity==$activity, feature==$mvn) )
	then
		activity failed with message "Can't select maven version: all available versions are incompatible"
end

rule "Maven_BuildCommand"
	salience -1 // shall be less than for mvn targets insertion rule
	when
	    active activity 'MvnBuildActivity'
	    cmd options for activity
		$pd : MavenProjectDir for activity
>		$mvn : MavenFeature()
>		FeatureInUse(activity==$activity, feature==$mvn)
	then
		execute command $mvn.getCmdName() in working dir $pd
end

rule "Maven execution status failed"
	when
		active activity 'MvnBuildActivity'
>		$execstat : ExecStatus(activity==$activity, succeeded==false)
	then
		insert artifact '$execstat.getFileOut()' as 'GenericUserInfoFileArtifact'
		activity failed with message "Maven failed with status " + $execstat.getStatus()
end