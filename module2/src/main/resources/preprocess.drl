import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.actionfacts.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.run.*;
import ru.spbstu.icc.kspt.kuznetsov.fpf4mir.core.facts.env.*;

rule "DownloadArtifact"
	when 
		$da : DeployActivity(  )
		$artifact : ArtifactRef(activity == $da)
		not Artifact(activity == $da)
	then
		insert( new DownloadAction($da, $artifact) );
end

rule "ExtractArtifact"
	when 
	    $da : DeployActivity(  )
		$artifact : Artifact(activity == $da, isFile(), fileName.endsWith(".zip"))
		not FolderArtifact(activity == $da)
	then
		insert( new ExtractAction($da, $artifact) );
end

rule "ProcessArtifactDirectory"
	when 
	    $da : DeployActivity(  )
		$artifact : Artifact(activity == $da, isDirectory())
		not FolderArtifact(this == $artifact)
	then
		retract($artifact);
		insert( new FolderArtifact($artifact.getId(), $artifact.getFile()) );
end

rule "DefaultScratchDir"
	when
		not DefaultScratchDir()
		$dd : DataDirRoot(  )
	then
		insert(new DefaultScratchDir($dd));
end

rule "DefaultTmpDir"
	when
		not TmpDirRoot( )
		$dd : DataDirRoot(  )
	then
		java.io.File f = new java.io.File($dd.getFile(), "tmp_" + java.util.UUID.randomUUID().toString());
		insert(new TmpDirRoot(f)); 
end